PP-Table([PP-Entry(Path1("RegexPattern"),[FBOX(KW,S("\"/\"")),Arg("1"),FBOX(KW,S("\"/\""))]),PP-Entry(Path1("SingleBranch"),[Arg("1")]),PP-Entry(Path1("TupleBranch"),[Arg("1"),FBOX(KW,S("\"|\"")),Arg("2")]),PP-Entry(Path1("Pieces"),[Arg("1")]),PP-Entry(Path("Pieces",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("SingleAtom"),[Arg("1")]),PP-Entry(Path1("QuantifiedAtom"),[Arg("1"),Arg("2")]),PP-Entry(Path1("GreedyExactBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path1("GreedyLowerBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}\""))]),PP-Entry(Path1("GreedyLowerUpperBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path1("GreedyOnceOrNot"),[FBOX(KW,S("\"?\""))]),PP-Entry(Path1("GreedyZeroOrMore"),[FBOX(KW,S("\"*\""))]),PP-Entry(Path1("GreedyOneOrMore"),[FBOX(KW,S("\"+\""))]),PP-Entry(Path1("ReluctantExactBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}?\""))]),PP-Entry(Path1("ReluctantLowerBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}?\""))]),PP-Entry(Path1("ReluctantLowerUpperBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\"}?\""))]),PP-Entry(Path1("ReluctantOnceOrNot"),[FBOX(KW,S("\"??\""))]),PP-Entry(Path1("ReluctantZeroOrMore"),[FBOX(KW,S("\"*?\""))]),PP-Entry(Path1("ReluctantOneOrMore"),[FBOX(KW,S("\"+?\""))]),PP-Entry(Path1("PossessiveExactBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}+\""))]),PP-Entry(Path1("PossessiveLowerBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}+\""))]),PP-Entry(Path1("PossessiveLowerUpperBound"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\"}+\""))]),PP-Entry(Path1("PossessiveOnceOrNot"),[FBOX(KW,S("\"?+\""))]),PP-Entry(Path1("PossessiveZeroOrMore"),[FBOX(KW,S("\"*+\""))]),PP-Entry(Path1("PossessiveOneOrMore"),[FBOX(KW,S("\"++\""))]),PP-Entry(Path1("Capture"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("NonCapture"),[FBOX(KW,S("\"(?:\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("PositiveLookahead"),[FBOX(KW,S("\"(?=\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("NegativeLookahead"),[FBOX(KW,S("\"(?!\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("PositiveLookbehind"),[FBOX(KW,S("\"(?<=\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("NegativeLookbehind"),[FBOX(KW,S("\"(?<!\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("PythonCapture"),[FBOX(KW,S("\"(?P<\"")),Arg("1"),FBOX(KW,S("\">\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("RegexCapture"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")@{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path1("Empty"),[FBOX(KW,S("\"()\""))]),PP-Entry(Path1("SingleCharacter"),[FBOX(KW,S("\".\""))]),PP-Entry(Path1("LineStart"),[FBOX(KW,S("\"^\""))]),PP-Entry(Path1("LineEnd"),[FBOX(KW,S("\"$\""))]),PP-Entry(Path1("CharacterClass"),[Arg("1")]),PP-Entry(Path1("AtomLiteral"),[Arg("1")]),PP-Entry(Path1("AtomCharacter"),[Arg("1")]),PP-Entry(Path1("QuotedAtom"),[FBOX(KW,S("\"\\\\Q\"")),Arg("1"),FBOX(KW,S("\"\\\\E\""))]),PP-Entry(Path1("BracketList"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"[\"")),Arg("1")])],FBOX(KW,S("\"]\""))])),PP-Entry(Path("BracketList",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("NegatedBracketList"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"[^\"")),Arg("1")])],FBOX(KW,S("\"]\""))])),PP-Entry(Path("NegatedBracketList",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("Range"),[Arg("1"),FBOX(KW,S("\"-\"")),Arg("2")]),PP-Entry(Path("Range",[selector("1","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path("Range",[selector("2","alt")]),[Arg("1"),Arg("2")]),PP-Entry(Path1("Union"),[Arg("1")]),PP-Entry(Path1("BracketLiteral"),[Arg("1")]),PP-Entry(Path1("BracketCharacter"),[Arg("1")]),PP-Entry(Path1("LowerClass"),[FBOX(KW,S("\"Lower\""))]),PP-Entry(Path1("UpperClass"),[FBOX(KW,S("\"Upper\""))]),PP-Entry(Path1("ASCIIClass"),[FBOX(KW,S("\"ASCII\""))]),PP-Entry(Path1("AlphaClass"),[FBOX(KW,S("\"Alpha\""))]),PP-Entry(Path1("DigitClass"),[FBOX(KW,S("\"Digit\""))]),PP-Entry(Path1("AlnumClass"),[FBOX(KW,S("\"Alnum\""))]),PP-Entry(Path1("PunctClass"),[FBOX(KW,S("\"Punct\""))]),PP-Entry(Path1("GraphClass"),[FBOX(KW,S("\"Graph\""))]),PP-Entry(Path1("PrintClass"),[FBOX(KW,S("\"Print\""))]),PP-Entry(Path1("BlankClass"),[FBOX(KW,S("\"Blank\""))]),PP-Entry(Path1("CntrlClass"),[FBOX(KW,S("\"Cntrl\""))]),PP-Entry(Path1("XDigitClass"),[FBOX(KW,S("\"XDigit\""))]),PP-Entry(Path1("WhiteSpace"),[FBOX(KW,S("\"Space\""))]),PP-Entry(Path1("JavaIsLowerCase"),[FBOX(KW,S("\"javaLowerCase\""))]),PP-Entry(Path1("JavaIsLowerCase"),[FBOX(KW,S("\"javaUpperCase\""))]),PP-Entry(Path1("JavaIsWhitespace"),[FBOX(KW,S("\"javaWhitespace\""))]),PP-Entry(Path1("JavaIsMirrored"),[FBOX(KW,S("\"javaMirrored\""))]),PP-Entry(Path1("GreekBlock"),[FBOX(KW,S("\"InGreek\""))]),PP-Entry(Path1("UppercaseLetter"),[FBOX(KW,S("\"Lu\""))]),PP-Entry(Path1("CurrencySymbol"),[FBOX(KW,S("\"Sc\""))]),PP-Entry(Path1("DoubleQuote"),[FBOX(KW,S("\"\\\"\""))]),PP-Entry(Path1("DoubleQuote"),[FBOX(KW,S("\"\\\"\""))]),PP-Entry(Path1("OctalChar"),[FBOX(KW,S("\"\\\\0\"")),Arg("1")]),PP-Entry(Path1("HexHexChar"),[FBOX(KW,S("\"\\\\x\"")),Arg("1")]),PP-Entry(Path1("DecHexChar"),[FBOX(KW,S("\"\\\\u\"")),Arg("1")]),PP-Entry(Path1("Tab"),[FBOX(KW,S("\"\\\\t\""))]),PP-Entry(Path1("Newline"),[FBOX(KW,S("\"\\\\n\""))]),PP-Entry(Path1("Return"),[FBOX(KW,S("\"\\\\r\""))]),PP-Entry(Path1("Formfeed"),[FBOX(KW,S("\"\\\\f\""))]),PP-Entry(Path1("Alarm"),[FBOX(KW,S("\"\\\\a\""))]),PP-Entry(Path1("Escape"),[FBOX(KW,S("\"\\\\e\""))]),PP-Entry(Path1("WordChar"),[FBOX(KW,S("\"\\\\w\""))]),PP-Entry(Path1("NonWordChar"),[FBOX(KW,S("\"\\\\W\""))]),PP-Entry(Path1("WhiteSpaceChar"),[FBOX(KW,S("\"\\\\s\""))]),PP-Entry(Path1("NonWhiteSpaceChar"),[FBOX(KW,S("\"\\\\S\""))]),PP-Entry(Path1("DigitChar"),[FBOX(KW,S("\"\\\\d\""))]),PP-Entry(Path1("NonDigitChar"),[FBOX(KW,S("\"\\\\D\""))]),PP-Entry(Path1("ControlCharacter"),[FBOX(KW,S("\"\\\\c\"")),Arg("1")]),PP-Entry(Path1("WordBoundry"),[FBOX(KW,S("\"\\\\b\""))]),PP-Entry(Path1("NonWordBoundry"),[FBOX(KW,S("\"\\\\B\""))]),PP-Entry(Path1("InputBeginBoundry"),[FBOX(KW,S("\"\\\\A\""))]),PP-Entry(Path1("PrevMatchEndBoundry"),[FBOX(KW,S("\"\\\\G\""))]),PP-Entry(Path1("EndInputBoundry"),[FBOX(KW,S("\"\\\\Z\""))]),PP-Entry(Path1("EndInputFinalBoundry"),[FBOX(KW,S("\"\\\\z\""))]),PP-Entry(Path1("BackReference"),[FBOX(KW,S("\"\\\\\"")),Arg("1")]),PP-Entry(Path1("Space"),[FBOX(KW,S("\"\\\\ \""))]),PP-Entry(Path1("Tab"),[FBOX(KW,S("\"\\\\\\t\""))]),PP-Entry(Path1("Newline"),[FBOX(KW,S("\"\\\\\\n\""))]),PP-Entry(Path1("OctalChar"),[FBOX(KW,S("\"\\\\0\"")),Arg("1")]),PP-Entry(Path1("HexHexChar"),[FBOX(KW,S("\"\\\\x\"")),Arg("1")]),PP-Entry(Path1("DecHexChar"),[FBOX(KW,S("\"\\\\u\"")),Arg("1")]),PP-Entry(Path1("Tab"),[FBOX(KW,S("\"\\\\t\""))]),PP-Entry(Path1("Newline"),[FBOX(KW,S("\"\\\\n\""))]),PP-Entry(Path1("Return"),[FBOX(KW,S("\"\\\\r\""))]),PP-Entry(Path1("Formfeed"),[FBOX(KW,S("\"\\\\f\""))]),PP-Entry(Path1("Alarm"),[FBOX(KW,S("\"\\\\a\""))]),PP-Entry(Path1("Escape"),[FBOX(KW,S("\"\\\\e\""))]),PP-Entry(Path1("WordChar"),[FBOX(KW,S("\"\\\\w\""))]),PP-Entry(Path1("NonWordChar"),[FBOX(KW,S("\"\\\\W\""))]),PP-Entry(Path1("WhiteSpaceChar"),[FBOX(KW,S("\"\\\\s\""))]),PP-Entry(Path1("NonWhiteSpaceChar"),[FBOX(KW,S("\"\\\\S\""))]),PP-Entry(Path1("DigitChar"),[FBOX(KW,S("\"\\\\d\""))]),PP-Entry(Path1("NonDigitChar"),[FBOX(KW,S("\"\\\\D\""))]),PP-Entry(Path1("ControlCharacter"),[FBOX(KW,S("\"\\\\c\"")),Arg("1")]),PP-Entry(Path1("WordBoundry"),[FBOX(KW,S("\"\\\\b\""))]),PP-Entry(Path1("NonWordBoundry"),[FBOX(KW,S("\"\\\\B\""))]),PP-Entry(Path1("InputBeginBoundry"),[FBOX(KW,S("\"\\\\A\""))]),PP-Entry(Path1("PrevMatchEndBoundry"),[FBOX(KW,S("\"\\\\G\""))]),PP-Entry(Path1("EndInputBoundry"),[FBOX(KW,S("\"\\\\Z\""))]),PP-Entry(Path1("EndInputFinalBoundry"),[FBOX(KW,S("\"\\\\z\""))]),PP-Entry(Path1("BackReference"),[FBOX(KW,S("\"\\\\\"")),Arg("1")]),PP-Entry(Path1("Space"),[FBOX(KW,S("\"\\\\ \""))]),PP-Entry(Path1("Tab"),[FBOX(KW,S("\"\\\\\\t\""))]),PP-Entry(Path1("Newline"),[FBOX(KW,S("\"\\\\\\n\""))]),PP-Entry(Path1("Quoted"),[FBOX(KW,S("\"\\\\\"")),Arg("1")]),PP-Entry(Path1("Quoted"),[FBOX(KW,S("\"\\\\\"")),Arg("1")]),PP-Entry(Path1("DoubleQuote"),[FBOX(KW,S("\"\\\"\""))]),PP-Entry(Path1("DoubleQuote"),[FBOX(KW,S("\"\\\"\""))]),PP-Entry(Path1("RegexId"),[Arg("1")]),PP-Entry(Path1("present"),[FBOX(KW,S("\"e\"")),Arg("1")]),PP-Entry(Path1("absent"),[]),PP-Entry(Path1("real-con"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),Arg("3")]),PP-Entry(Path1("natural"),[Arg("1")]),PP-Entry(Path1("positive"),[FBOX(KW,S("\"+\"")),Arg("1")]),PP-Entry(Path1("negative"),[FBOX(KW,S("\"-\"")),Arg("1")]),PP-Entry(Path1("quoted"),[Arg("1")]),PP-Entry(Path1("unquoted"),[Arg("1")]),PP-Entry(Path1("int"),[Arg("1")]),PP-Entry(Path1("real"),[Arg("1")]),PP-Entry(Path1("fun"),[Arg("1")]),PP-Entry(Path1("appl"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("appl",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("appl"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("appl",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("placeholder"),[FBOX(KW,S("\"<\"")),Arg("1"),FBOX(KW,S("\">\""))]),PP-Entry(Path1("list"),[FBOX(KW,S("\"[\"")),Arg("1"),FBOX(KW,S("\"]\""))]),PP-Entry(Path("list",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("annotated"),[Arg("1"),Arg("2")]),PP-Entry(Path1("default"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("default",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("testsuite"),[Arg("1"),Arg("2")]),PP-Entry(Path("testsuite",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("testsuite",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("CompletionHelper"),[FBOX(KW,S("\"COMPLETION\"")),Arg("1")]),PP-Entry(Path1("Name"),[FBOX(KW,S("\"module\"")),Arg("1")]),PP-Entry(Path1("Package"),[FBOX(KW,S("\"package\"")),Arg("1")]),PP-Entry(Path1("TopSort"),[FBOX(KW,S("\"start\"")),FBOX(KW,S("\"symbol\"")),Arg("1")]),PP-Entry(Path1("Language"),[FBOX(KW,S("\"language\"")),Arg("1")]),PP-Entry(Path1("CompletionDisable"),[FBOX(KW,S("\"disable\"")),FBOX(KW,S("\"completion\"")),FBOX(KW,S("\"tests\""))]),PP-Entry(Path1("TargetTopSort"),[FBOX(KW,S("\"target\"")),FBOX(KW,S("\"start\"")),FBOX(KW,S("\"symbol\"")),Arg("1")]),PP-Entry(Path1("TargetLanguage"),[FBOX(KW,S("\"target\"")),FBOX(KW,S("\"language\"")),Arg("1")]),PP-Entry(Path1("VarDecl"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("file"),[FBOX(KW,S("\"parse\"")),FBOX(KW,S("\"to\"")),FBOX(KW,S("\"file\"")),Arg("1")]),PP-Entry(Path1("pattern"),[FBOX(KW,S("\"parse\"")),FBOX(KW,S("\"to\"")),Arg("1")]),PP-Entry(Path1("ParseOutput"),[FBOX(KW,S("\"parse\"")),FBOX(KW,S("\"to\"")),Arg("1")]),PP-Entry(Path1("FailsParsing"),[FBOX(KW,S("\"parse\"")),FBOX(KW,S("\"fails\""))]),PP-Entry(Path1("SuccessParsing"),[FBOX(KW,S("\"parse\"")),FBOX(KW,S("\"succeeds\""))]),PP-Entry(Path1("SuccessParsing"),[FBOX(KW,S("\"parse\""))]),PP-Entry(Path1("file"),[FBOX(KW,S("\"file\"")),Arg("1")]),PP-Entry(Path1("Error"),[Arg("1"),FBOX(KW,S("\"error\""))]),PP-Entry(Path1("Errors"),[Arg("1"),FBOX(KW,S("\"errors\""))]),PP-Entry(Path1("Warning"),[Arg("1"),FBOX(KW,S("\"warning\""))]),PP-Entry(Path1("Warnings"),[Arg("1"),FBOX(KW,S("\"warnings\""))]),PP-Entry(Path1("Note"),[Arg("1"),FBOX(KW,S("\"note\""))]),PP-Entry(Path1("Notes"),[Arg("1"),FBOX(KW,S("\"notes\""))]),PP-Entry(Path1("Fatal"),[Arg("1"),FBOX(KW,S("\"fatal\"")),FBOX(KW,S("\"error\""))]),PP-Entry(Path1("Fatals"),[Arg("1"),FBOX(KW,S("\"fatal\"")),FBOX(KW,S("\"errors\""))]),PP-Entry(Path1("Resolve"),[FBOX(KW,S("\"resolve\"")),Arg("1")]),PP-Entry(Path1("ResolveTo"),[FBOX(KW,S("\"resolve\"")),Arg("1"),FBOX(KW,S("\"to\"")),Arg("2")]),PP-Entry(Path1("Complete"),[FBOX(KW,S("\"complete\"")),Arg("1")]),PP-Entry(Path1("CompleteTo"),[FBOX(KW,S("\"complete\"")),Arg("1"),FBOX(KW,S("\"to\"")),Arg("2")]),PP-Entry(Path1("Build"),[FBOX(KW,S("\"build\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path1("Run"),[FBOX(KW,S("\"run\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path1("Refactor"),[FBOX(KW,S("\"refactor\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path1("None"),[]),PP-Entry(Path1("Argument"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("wildcard"),[]),PP-Entry(Path1("File"),[FBOX(KW,S("\"to\"")),FBOX(KW,S("\"file\"")),Arg("1")]),PP-Entry(Path1("Fragment"),[FBOX(KW,S("\"to\"")),Arg("1")]),PP-Entry(Path1("ATerm"),[FBOX(KW,S("\"to\"")),Arg("1")]),PP-Entry(Path1("Fails"),[FBOX(KW,S("\"fails\""))]),PP-Entry(Path1("Numbered"),[FBOX(KW,S("\"#\"")),Arg("1")]),PP-Entry(Path1("Unnumbered"),[]),PP-Entry(Path1("CompletionHelper"),[FBOX(KW,S("\"COMPLETION\"")),Arg("1")]),PP-Entry(Path1("wildcard"),[FBOX(KW,S("\"_\""))]),PP-Entry(Path1("wildcardvar"),[FBOX(KW,S("\"...\""))]),PP-Entry(Path1("description"),[Arg("1")])])