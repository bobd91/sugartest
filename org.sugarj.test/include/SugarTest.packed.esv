Module("SugarTest.main.packed",Imports([Import("SugarTest.main"),Import("SugarTest-Builders"),Import("SugarTest-Refactorings"),Import("SugarTest-Colorer"),Import("SugarTest-Completions"),Import("SugarTest-Folding"),Import("SugarTest-Outliner"),Import("SugarTest-References"),Import("SugarTest-Syntax"),Import("SugarTest-Builders.generated"),Import("SugarTest-Refactorings.generated"),Import("SugarTest-Colorer.generated"),Import("SugarTest-Completions.generated"),Import("SugarTest-Folding.generated"),Import("SugarTest-Outliner.generated"),Import("SugarTest-References.generated"),Import("SugarTest-Syntax.generated")]),[Language(" General properties",[LanguageName("SugarTest"),LanguageId("org.sugarj.test"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the SugarTest language\"")),URL("http://strategoxt.org"),Extensions(Values(["sugt"])),Table("include/SugarTest.tbl"),StartSymbols([Sort("TestSuite")])]),Builders("",[SemanticProvider("include/sugartest.ctree"),SemanticProvider("include/sugartest-java.jar"),SemanticObserver(Strategy("editor-analyze"),[]),Builder(String("\"Show abstract syntax (for selection)\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Source]),Builder(String("\"Generate missing output file with current AST\""),Strategy("generate-ast-file"),[Cursor]),Builder(String("\"Run testsuites\""),Strategy("test-runner"),[]),Builder(String("\"Run testsuite (current file)\""),Strategy("test-runner-file"),[])]),KeyBindings(" Predefined Keybindings",[KeyBinding(KeyCombination(["Shift","Alt","R"]),String("\"org.eclipse.jdt.ui.edit.text.java.rename.element\"")),KeyBinding(KeyCombination(["Shift","Alt","I"]),String("\"org.eclipse.jdt.ui.edit.text.java.inline\"")),KeyBinding(KeyCombination(["Shift","Alt","M"]),String("\"org.eclipse.jdt.ui.edit.text.java.extract.method\"")),KeyBinding(KeyCombination(["Shift","Alt","V"]),String("\"org.eclipse.jdt.ui.move.method\"")),KeyBinding(KeyCombination(["Shift","Alt","C"]),String("\"org.eclipse.jdt.ui.change.method.signature\"")),KeyBinding(KeyCombination(["Shift","Alt","L"]),String("\"org.eclipse.jdt.ui.edit.text.java.extract.local.variable\"")),KeyBinding(KeyCombination(["Shift","Ctrl","F"]),String("\"org.eclipse.jdt.ui.edit.text.java.format\"")),KeyBinding(KeyCombination(["Ctrl","I"]),String("\"org.eclipse.jdt.ui.edit.text.java.indent\"")),KeyBinding(KeyCombination(["Shift","Ctrl","C"]),String("\"org.eclipse.jdt.ui.edit.text.java.toggle.comment\"")),KeyBinding(KeyCombination(["Shift","Ctrl","M"]),String("\"org.eclipse.jdt.ui.edit.text.java.add.import\"")),KeyBinding(KeyCombination(["Shift","Ctrl","O"]),String("\"org.eclipse.jdt.ui.edit.text.java.organize.imports\""))]),Colorer("",[ColorRule(ConstructorOnly(Constructor("description")),Attribute(ColorRGB("0","128","0"),NoColor,BOLD))]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionKeyword(String("\"(?P<\""),None),CompletionKeyword(String("\"\\\\Q\""),None),CompletionKeyword(String("\"\\\\E\""),None),CompletionKeyword(String("\"\\\\x\""),None),CompletionKeyword(String("\"\\\\u\""),None),CompletionKeyword(String("\"\\\\r\""),None),CompletionKeyword(String("\"\\\\f\""),None),CompletionKeyword(String("\"\\\\a\""),None),CompletionKeyword(String("\"\\\\e\""),None),CompletionKeyword(String("\"\\\\w\""),None),CompletionKeyword(String("\"\\\\W\""),None),CompletionKeyword(String("\"\\\\s\""),None),CompletionKeyword(String("\"\\\\S\""),None),CompletionKeyword(String("\"\\\\d\""),None),CompletionKeyword(String("\"\\\\D\""),None),CompletionKeyword(String("\"\\\\c\""),None),CompletionKeyword(String("\"\\\\b\""),None),CompletionKeyword(String("\"\\\\B\""),None),CompletionKeyword(String("\"\\\\A\""),None),CompletionKeyword(String("\"\\\\G\""),None),CompletionKeyword(String("\"\\\\Z\""),None),CompletionKeyword(String("\"\\\\z\""),None),CompletionKeyword(String("\"\\\\\\t\""),None),CompletionKeyword(String("\"\\\\\\n\""),None),CompletionKeyword(String("\"\\\\n\""),None),CompletionKeyword(String("\"\\\\t\""),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("TestSuite"),Constructor("testsuite")),None),FoldRule(SortAndConstructor(Sort("VarDecl"),Constructor("VarDecl")),None)]),References("",[HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])